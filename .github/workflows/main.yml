# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    
env:
  AZ_WEPAPP_NAME: 'oovblog'
  ASP_PLAN : 'oovblog-asp'
  RESOURCEGROUPNAME : 'blog-rg'
  LOCATION: 'centralus'
  WEBAPP_SKU : 'B1'
  POSTGRES_SERVER_NAME: 'oovpostgresql51721'
  POSTGRES_SKU: 'B_Gen5_1'
  POSTGRES_DB_NAME: 'blogdb'
  POSTGRES_ADMIN: 'admin'
  
  

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@main

      - name: Azure Login
        uses: Azure/login@v1
        with:
          # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
          creds: ${{ secrets.AZURE_CREDENTIALS }}


        # Create Resource Group
      - name: Create Resource Group
        uses: Azure/cli@1.0.4
        continue-on-error: false
        with:
          inlineScript: |
                az group create --name "${{ env.RESOURCEGROUPNAME }}" --location "${{ env.LOCATION }}"
                
        # Add db-up extension
      - name: Add db extension to deployment
        uses: Azure/cli@1.0.4
        continue-on-error: false
        with:
          inlineScript: |
              az extension add --name db-up

        # Create postgres
      - name: Create Postgres
        uses: Azure/cli@1.0.4
        continue-on-error: false
        with:
          inlineScript: | 
          az postgres up --resource-group "${{ env.RESOURCEGROUPNAME }}" --location "${{ env.LOCATION }}" --sku-name "${{ env.POSTGRES_SKU }}" --server-name "${{ env.POSTGRES_SERVER_NAME }}" --database-name "${{ env.POSTGRES_DB_NAME }}" --admin-user "${{ env.POSTGRES_ADMIN }}" --admin-password "${{ secrets.POSTGRES_PASSWORD }}" --ssl-enforcement Enabled

        # Create Web App
      - name: Create Web App
        uses: Azure/cli@1.0.4
        continue-on-error: false
        with:
          inlineScript: |
          az webapp up --resource-group "{{ env.RESOURCEGROUPNAME}}" --location "${{ env.LOCATION }}" --plan "${{ env.ASP_PLAN}}" --sku "${{ env.WEBAPP_SKU }}" --name "${{ env.AZ_WEPAPP_NAME }}"



        # Configure environment variables to connect the database
      - name: Configure WebApp
        uses: Azure/cli@1.0.4
        continue-on-error: false
        with:
          inlineScript: |
                az webapp config appsettings set --settings DBHOST="${{ env.POSTGRES_SERVER_NAME }}" DBNAME="${{ env.POSTGRES_DB_NAME }}" DBUSER="${{ env.POSTGRES_ADMIN }}" DBPASS="${{ secrets.POSTGRES_PASSWORD }}"
          
          
          
          
